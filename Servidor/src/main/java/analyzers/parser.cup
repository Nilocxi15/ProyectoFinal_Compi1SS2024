/*--------------- 1ra Area: Codigo de Usuario -----------------------*/
//-------> importaciones, paquetes
package analyzers;
import java_cup.runtime.Symbol;
import java.time.LocalDateTime;

//------> Codigo para el parser,variables, metodos
parser code
{:

  public String resultado = "Se encontraron errores durante el análisis del código";
  boolean error = false;

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s)
    {
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        int tipo = s.sym;

        System.out.println("!!!!!!! Error Sintactico Recuperado !!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);
        System.out.println("\t\tTipo: "+tipo);
        error = true;

        error(fila, columna, tipo, lexema);
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        int tipo = s.sym;

        System.out.println("!!!!!!! Error Sintactico, Panic Mode !!!!!!! ");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);
        System.out.println("\t\tTipo: "+tipo);
        error = true;

        error(fila, columna, tipo, lexema);
    }

    //Metodos para reiniciar los valores de resultado
    public void resetParser() {
      resultado = "Se encontraron errores durante el análisis del código";
      error = false;
    }

    //Metodo para el manejo de errores
    private void error(int fila, int columna, int tipo, String lexema) {
      switch (tipo) {
        case 2:
          resultado += "\nError en la fila: "+fila+", columna: "+columna+". Se esperaba una variable, parámetro o el token '==' y se obtuvo: "+lexema;
          break;
        case 3:
          resultado += "\nError en la fila: "+fila+", columna: "+columna+". No se esperaba el token: "+lexema; //Arreglas esto
          break;
      }
    }
:}

//------> Codigo para las acciones gramaticales
action code
{:

  //Metodo para verificar el resultado del analisis
  private void verifyParser() {
  System.out.println("Estado del analisis " +error);
    if (!error) {
      resultado = null;
      resultado = "------------------------------------------------------------------" + "\n";
      resultado += "El analisis ha finalizado sin errores";
      resultado += "\n";
      resultado += "El archivo se generó correctamente con el nombre: "+ccName + "\n";
      resultado += "------------------------------------------------------------------";
    }
  }

  //Metodos para contar los atributos de la etiqueta C_CC
  private int ccField1 = 0;
  private int ccField2 = 0;
  private String ccName = "";
  private String ccId = "";

  private void ccFieldOne() {
    ccField1++;
  }

  private void ccFieldTwo() {
    ccField2++;
  }

  private void ccFieldReset() {
    ccField1 = 0;
    ccField2 = 0;
  }

  private void verifyCCFields() {
    if (ccField1 == 1 && ccField2 == 1) {
      System.out.println("Los campos de la etiqueta C_CC son correctos");
      System.out.println("El id encontrado es: "+ccId);
      System.out.println("El name encontrado es: "+ccName);
    } else if (ccField1 == 0 && ccField2 == 1) {
      ccId = java.time.LocalDateTime.now().toString();
      System.out.println("Parametro id de la etiqueta C_CC no encontrado");
      System.out.println("El id encontrado es: "+ccId);
      System.out.println("El name encontrado es: "+ccName);
    } else if (ccField1 == 1 && ccField2 == 0) {
      ccName = "CAPTCHA";
      System.out.println("Parametro name de la etiqueta C_CC no encontrado");
      System.out.println("El id encontrado es: "+ccId);
      System.out.println("El name encontrado es: "+ccName);
    } else if (ccField1 == 0 && ccField2 == 0) {
      ccName = "CAPTCHA";
      ccId = java.time.LocalDateTime.now().toString();
      System.out.println("Parametros id y name de la etiqueta C_CC no encontrados");
      System.out.println("El id encontrado es: "+ccId);
      System.out.println("El name encontrado es: "+ccName);
    } else if (ccField1 > 1 && ccField2 == 1) {
      System.out.println("Se encontraron varios parametros id en la etiqueta C_CC");
      System.out.println("El name encontrado es: "+ccName);
      error = true;
    } else if (ccField1 == 1 && ccField2 > 1) {
      System.out.println("Se encontraron varios parametros name en la etiqueta C_CC");
      System.out.println("El id encontrado es: "+ccId);
      error = true;
    } else {
      System.out.println("Se encontraron varios parametros id y name en la etiqueta C_CC");
      error = true;
    }
  }

  //Metodos para contar los atributos de las etiquetas de C_HEAD
  private int chField1 = 0;
  private int chField2 = 0;

  private void chFieldOne() {
    chField1++;
  }

  private void chFieldTwo() {
    chField2++;
  }

  private void chFieldReset() {
    chField1 = 0;
    chField2 = 0;
  }

  private void verifyCHFields() {
    if (chField1 == 1 && chField2 == 1) {
      System.out.println("Los campos de la etiqueta C_HEADER son correctos");
    } else if (chField1 == 0 && chField2 == 1) {
      System.out.println("Contenido del titulo de la etiqueta C_HEADER no encontrado");
      error = true;
    } else if (chField1 == 1 && chField2 == 0) {
      System.out.println("Parametro link de la etiqueta C_HEADER no encontrado");
      error = true;
    } else if (chField1 == 0 && chField2 == 0) {
      System.out.println("Parametros id y name de la etiqueta C_HEADER no encontrados");
      error = true;
    } else if (chField1 > 1 && chField2 == 1) {
      System.out.println("Se encontraron varios parametros link en la etiqueta C_HEADER");
      error = true;
    } else if (chField1 == 1 && chField2 > 1) {
      System.out.println("Se encontraron varios parametros title en la etiqueta C_HEADER");
      error = true;
    } else {
      System.out.println("Se encontraron varios parametros title y link en la etiqueta C_HEADER");
      error = true;
    }
  }

  //Metodo para contar el atributo de la etiqueta de C_BODY
  private int cbField1 = 0;

  private void cbFieldOne() {
    cbField1++;
  }

  private void cbFieldReset() {
    cbField1 = 0;
  }

  private void verifyCBFields() {
    if (cbField1 == 1) {
      System.out.println("El campo de la etiqueta C_BODY es correcto");
    }
    else {
      System.out.println("Parametro background de la etiqueta C_BODY no encontrado");
    }
  }

  //Metodos para la escritura del archivo
  private String head = null;
  private String body = null;

  private String titleHtml = null;
  private String linkHtml = null;

  private String bodyLabels = null;

  private void resetStrings() {
    head = null;
    body = null;
    titleHtml = null;
    linkHtml = null;
    bodyLabels = null;
  }

:}

/*--------------- 2da Area: Declaraciones -----------------------*/
//------> declaracion de terminales
terminal Assign, Plus, Minus, Div, Mult, Equal, NotEqual, LessThan, LessEqual, GreaterThan, BracketOpen, BracketClose,
                GreaterEqual, And, Or, Not, ParOpen, ParClose, Quotes, Html, Head, Title, Link, Body, Span, Input,
                Textarea, Select, Option, DivHtml, Img, Br, Button, h1, p, Color, FontFamily, TextAlign, Type, id, name,
                href, Background, ColorSentence, FontSizeSentence, FontFamilySentence, TextAliginSentence, TypeSentence,
                ColsSentence, RowsSentence, onclickSentence, altSentence, Number, Hexadecimal, FontSize, Text, LinkHtml,
                TextAlignSentence, HtmlEnd, HeadEnd, TitleEnd, LinkEnd, BodyEnd, SpanEnd, TextareaEnd, SelectEnd,
                OptionEnd, DivHtmlEnd, ButtonEnd, h1End, pEnd, ImageSize, classSentence, Row, Column, src,
                width, height, FunctionName;



//------> declaracion de no terminales
nonterminal INICIO, CONTENTHEADER, HEADER, TEXT, ATRIBINICIO, BODY, LINKTEXT, BODYTEXT, COLOR, BODYCONTENT, TEXTAREAPARAMETERS,
            SPANPARAMETERS, INPUTPARAMETERS, SELECTPARAMETERS, DIVHTMLPARAMETERS, IMGPARAMETERS, CLASSOPTIONS, BUTTONETIQUETAS,
            BUTTONPARAMETERS, H1PPARAMETERS, SPECIALTEXT, SIGNS, IMAGESIZES, SELECTETIQUETAS, SPANETIQUETAS;

//----> precedencia de menor a mayor
/*
precedence left mas, menos;
precedence left por, div;
*/

start with INICIO;

/*--------------- 3ra Area: Reglas Semanticas -----------------------*/
INICIO ::= LessThan Html ATRIBINICIO GreaterThan HEADER BODY LessThan HtmlEnd GreaterThan
            {: verifyCCFields();
            verifyParser();
            verifyCHFields();
            String text;
            text = "<!DOCTYPE html>\n";
            text += "<html lang = \"es\">\n";
            if (head != null) {
              text += head;
            }
            if (body != null) {
              text += body;
            }
            text += "</html>";
            System.out.println("CONTENIDO DEL DOCUMENTO: \n\n\n");
            System.out.println(text);
            ccFieldReset();
            chFieldReset();
            cbFieldReset();:};

ATRIBINICIO ::= BracketOpen id Assign Quotes Text:id Quotes BracketClose ATRIBINICIO
                {: ccFieldOne();
                 ccId = String.valueOf(id); :}
                |BracketOpen name Assign Quotes TEXT:name Quotes BracketClose ATRIBINICIO
                {: ccFieldTwo();
                ccName = String.valueOf(name); :}
                | error ATRIBINICIO
                | /* epsilon */;

HEADER ::= LessThan Head GreaterThan CONTENTHEADER CONTENTHEADER LessThan HeadEnd GreaterThan
            {: head = "<head>\n";
            head += "\t<charset=\"UTF-8\">\n";
            head += "\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n";
            if (titleHtml != null) {
              head += "\t<title>"+titleHtml+"</title>\n";
            }
            if (linkHtml != null) {
              head += "\t<link rel=\"stylesheet\" href=\""+linkHtml+"\">\n";
            }
            head += "</head>\n";:}
            | error;

CONTENTHEADER ::= LessThan Title GreaterThan TEXT:title LessThan TitleEnd GreaterThan
              {: chFieldOne();
              titleHtml = String.valueOf(title);:}
              | LessThan Link LINKTEXT:link GreaterThan LessThan LinkEnd GreaterThan
              | error; // El epsilon de esta producción está pendiente de revisión

LINKTEXT ::= BracketOpen href Assign Quotes LinkHtml:link Quotes BracketClose
            {: chFieldTwo();
            linkHtml = String.valueOf(link);:}
            | error LINKTEXT
            | /* epsilon */;

BODY ::= LessThan Body BODYTEXT:bodytext GreaterThan LessThan BODYCONTENT:bodycontent BodyEnd GreaterThan
          {:
          body = "<body";
          if (bodytext != null) {
            body += bodytext;
          } else {
            body += ">\n";
          }
          if (bodycontent != null) {
            body += bodycontent;
          }
          body += "</body>\n";:}
          | error;

BODYTEXT ::= BracketOpen Background Assign Quotes COLOR:color Quotes BracketClose
            {: RESULT = " style=\"background: "+ String.valueOf(color) +"\">\n"; :}
            | error BODYTEXT
            | /* epsilon */;

BODYCONTENT ::=  Span SPANPARAMETERS GreaterThan SPECIALTEXT LessThan SPANETIQUETAS SpanEnd GreaterThan LessThan BODYCONTENT:a
                {: RESULT = "SPAN\n" + a; :}
                | Input INPUTPARAMETERS GreaterThan LessThan BODYCONTENT:a
                {: RESULT = "INPUT\n" + a; :}
                | Textarea TEXTAREAPARAMETERS GreaterThan SPECIALTEXT LessThan TextareaEnd GreaterThan LessThan BODYCONTENT:a
                {: RESULT = "TEXTAREA\n" + a; :}
                | Select SELECTPARAMETERS GreaterThan LessThan SELECTETIQUETAS SelectEnd GreaterThan LessThan BODYCONTENT:a
                {: RESULT = "SELECT\n" + a; :}
                | Option GreaterThan SPECIALTEXT LessThan OptionEnd GreaterThan LessThan BODYCONTENT:a
                {: RESULT = "OPTION\n" + a; :}
                | DivHtml DIVHTMLPARAMETERS GreaterThan LessThan BODYCONTENT DivHtmlEnd GreaterThan LessThan BODYCONTENT:a
                {: RESULT = "DIV\n" + a; :}
                | Img IMGPARAMETERS GreaterThan LessThan BODYCONTENT:a
                {: RESULT = "IMG\n" + a; :}
                | Br GreaterThan LessThan BODYCONTENT:a
                {: RESULT = "BR\n" + a; :}
                | Button BUTTONPARAMETERS GreaterThan SPECIALTEXT LessThan BUTTONETIQUETAS ButtonEnd GreaterThan LessThan BODYCONTENT:a
                {: RESULT = "BUTTON\n" + a; :}
                | h1 H1PPARAMETERS GreaterThan SPECIALTEXT LessThan SPANETIQUETAS h1End GreaterThan LessThan BODYCONTENT:a
                {: RESULT = "H1\n" + a; :}
                | p H1PPARAMETERS GreaterThan SPECIALTEXT LessThan SPANETIQUETAS pEnd GreaterThan LessThan BODYCONTENT:a
                {: RESULT = "P\n" + a; :}
                | error BODYCONTENT
                {:System.out.println("\t\tERROR EN LA PRODUCCION DE BODYCONTENT");:}
                | /* epsilon */;

SPANPARAMETERS ::= BracketOpen ColorSentence Assign Quotes COLOR Quotes BracketClose SPANPARAMETERS
                  | BracketOpen FontSizeSentence Assign Quotes FontSize Quotes BracketClose SPANPARAMETERS
                  | BracketOpen FontFamilySentence Assign Quotes FontFamily Quotes BracketClose SPANPARAMETERS
                  | BracketOpen TextAlignSentence Assign Quotes TextAlign Quotes BracketClose SPANPARAMETERS
                  | BracketOpen id Assign Quotes Text Quotes BracketClose SPANPARAMETERS
                  | error SPANPARAMETERS
                  | /* epsilon */;

INPUTPARAMETERS ::= BracketOpen TypeSentence Assign Quotes Type Quotes BracketClose INPUTPARAMETERS
                    | BracketOpen FontSizeSentence Assign Quotes FontSize Quotes BracketClose INPUTPARAMETERS
                    | BracketOpen FontFamilySentence Assign Quotes FontFamily Quotes BracketClose INPUTPARAMETERS
                    | BracketOpen TextAlignSentence Assign Quotes TextAlign Quotes BracketClose INPUTPARAMETERS
                    | BracketOpen id Assign Quotes Text Quotes BracketClose INPUTPARAMETERS
                    | BracketOpen ColorSentence Assign Quotes COLOR Quotes BracketClose INPUTPARAMETERS
                    | error INPUTPARAMETERS
                    | /* epsilon */;

TEXTAREAPARAMETERS ::= BracketOpen FontSizeSentence Assign Quotes FontSize Quotes BracketClose TEXTAREAPARAMETERS
                      | BracketOpen FontFamilySentence Assign Quotes FontFamily Quotes BracketClose TEXTAREAPARAMETERS
                      | BracketOpen TextAlignSentence Assign Quotes TextAlign Quotes BracketClose TEXTAREAPARAMETERS
                      | BracketOpen id Assign Quotes Text Quotes BracketClose TEXTAREAPARAMETERS
                      | BracketOpen ColsSentence Assign Quotes Number Quotes BracketClose TEXTAREAPARAMETERS
                      | BracketOpen RowsSentence Assign Quotes Number Quotes BracketClose TEXTAREAPARAMETERS
                      | error TEXTAREAPARAMETERS
                      | /* epsilon */;

SELECTPARAMETERS ::= BracketOpen FontSizeSentence Assign Quotes FontSize Quotes BracketClose SELECTPARAMETERS
                    | BracketOpen FontFamilySentence Assign Quotes FontFamily Quotes BracketClose SELECTPARAMETERS
                    | BracketOpen TextAlignSentence Assign Quotes TextAlign Quotes BracketClose SELECTPARAMETERS
                    | BracketOpen id Assign Quotes Text Quotes BracketClose SELECTPARAMETERS
                    | BracketOpen ColorSentence Assign Quotes COLOR Quotes BracketClose SELECTPARAMETERS
                    | error SELECTPARAMETERS
                    | /* epsilon */;

DIVHTMLPARAMETERS ::= BracketOpen FontSizeSentence Assign Quotes FontSize Quotes BracketClose DIVHTMLPARAMETERS
                      | BracketOpen FontFamilySentence Assign Quotes FontFamily Quotes BracketClose DIVHTMLPARAMETERS
                      | BracketOpen TextAlignSentence Assign Quotes TextAlign Quotes BracketClose DIVHTMLPARAMETERS
                      | BracketOpen id Assign Quotes Text Quotes BracketClose DIVHTMLPARAMETERS
                      | BracketOpen classSentence Assign Quotes CLASSOPTIONS Quotes BracketClose DIVHTMLPARAMETERS
                      | BracketOpen ColorSentence Assign Quotes COLOR Quotes BracketClose DIVHTMLPARAMETERS
                      | BracketOpen Background Assign Quotes COLOR Quotes BracketClose DIVHTMLPARAMETERS
                      | error DIVHTMLPARAMETERS
                      | /* epsilon */;

IMGPARAMETERS ::= BracketOpen src Assign Quotes LinkHtml Quotes BracketClose IMGPARAMETERS
                  | BracketOpen width Assign Quotes IMAGESIZES Quotes BracketClose IMGPARAMETERS
                  | BracketOpen height Assign Quotes IMAGESIZES Quotes BracketClose IMGPARAMETERS
                  | BracketOpen altSentence Assign Quotes TEXT Quotes BracketClose IMGPARAMETERS
                  | BracketOpen id Assign Quotes Text Quotes BracketClose IMGPARAMETERS
                  | error IMGPARAMETERS
                  | /* epsilon */;

BUTTONPARAMETERS ::= BracketOpen FontSizeSentence Assign Quotes FontSize Quotes BracketClose BUTTONPARAMETERS
                    | BracketOpen FontFamilySentence Assign Quotes FontFamily Quotes BracketClose BUTTONPARAMETERS
                    | BracketOpen TextAlignSentence Assign Quotes TextAlign Quotes BracketClose BUTTONPARAMETERS
                    | BracketOpen id Assign Quotes Text Quotes BracketClose BUTTONPARAMETERS
                    | BracketOpen ColorSentence Assign Quotes COLOR Quotes BracketClose BUTTONPARAMETERS
                    | BracketOpen Background Assign Quotes COLOR Quotes BracketClose BUTTONPARAMETERS
                    | BracketOpen onclickSentence Assign Quotes FunctionName Quotes BracketClose BUTTONPARAMETERS
                    | error BUTTONPARAMETERS
                    | /* epsilon */;

H1PPARAMETERS ::= BracketOpen FontSizeSentence Assign Quotes FontSize Quotes BracketClose H1PPARAMETERS
                  | BracketOpen FontFamilySentence Assign Quotes FontFamily Quotes BracketClose H1PPARAMETERS
                  | BracketOpen TextAlignSentence Assign Quotes TextAlign Quotes BracketClose H1PPARAMETERS
                  | BracketOpen id Assign Quotes Text Quotes BracketClose H1PPARAMETERS
                  | BracketOpen ColorSentence Assign Quotes COLOR Quotes BracketClose H1PPARAMETERS
                  | error H1PPARAMETERS
                  | /* epsilon */;

SELECTETIQUETAS ::= Option GreaterThan SPECIALTEXT LessThan OptionEnd GreaterThan LessThan SELECTETIQUETAS
                    | error SELECTETIQUETAS
                    | /* epsilon */;

BUTTONETIQUETAS ::= Img IMGPARAMETERS GreaterThan SPECIALTEXT LessThan BUTTONETIQUETAS
                    | Span SPANPARAMETERS GreaterThan SPECIALTEXT LessThan SpanEnd GreaterThan SPECIALTEXT LessThan BUTTONETIQUETAS
                    | Br GreaterThan SPECIALTEXT LessThan BUTTONETIQUETAS
                    | error BUTTONETIQUETAS
                    | /* epsilon */;

SPANETIQUETAS ::= Br GreaterThan SPECIALTEXT LessThan SPANETIQUETAS
                  | error SPANETIQUETAS
                  | /* epsilon */;

COLOR ::= Hexadecimal:a {: RESULT = String.valueOf(a); :}
          | Color:a {: RESULT = String.valueOf(a); :}
          | error;

IMAGESIZES ::= FontSize
              |ImageSize
              |error;

TEXT ::= Text:a TEXT:b {: RESULT = String.valueOf(a) + " " + String.valueOf(b); :}
        | Number:a TEXT:b {: RESULT = String.valueOf(a) + " " + String.valueOf(b); :}
        | Number:a {: RESULT = String.valueOf(a); :}
        | Text:a {: RESULT = String.valueOf(a); :};

SIGNS ::= Assign
          | Plus
          | Minus
          | Div
          | Mult
          | ParOpen
          | ParClose
          | Quotes
          | BracketOpen
          | BracketClose;

CLASSOPTIONS ::= Column
                | Row
                | error;

SPECIALTEXT ::= Text SPECIALTEXT
                | Number SPECIALTEXT
                | SIGNS SPECIALTEXT
                | /* epsilon */;
